stages:
  - build
  - deploy

build:
  stage: build
  image: node:20-bullseye
  tags:
    - trainer
  script:
    - echo "üöÄ Starting build process..."
    - apt-get update -qq && apt-get install -y -qq zip
    
    # C√†i ƒë·∫∑t dependencies
    - npm ci --legacy-peer-deps
    
    # Bi·∫øn m√¥i tr∆∞·ªùng quan tr·ªçng ƒë·ªÉ t·∫Øt LightningCSS
    - export NEXT_DISABLE_LIGHTNINGCSS=1
    - export NODE_OPTIONS="--max-old-space-size=4096"
    - export NODE_ENV=production
    
    # T·∫°o file .env t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
    - echo "üîß Configuring environment..."
    - echo "$STAGING_ENV" > .env
    - cat .env
    
    # S·ª≠ d·ª•ng file next.config.ts hi·ªán c√≥ - kh√¥ng t·∫°o file m·ªõi
    
    # Build ·ª©ng d·ª•ng
    - npm run build
    
    # T·∫°o file zip
    - cd dist
    - zip -r ../deploy.zip .
    - cd ..
  artifacts:
    paths:
      - deploy.zip
  only:
    - staging

deploy:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  tags:
    - trainer
  script:
    - echo "üåê Starting deployment to AWS Amplify..."
    
    # C·∫•u h√¨nh AWS
    - aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
    - aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
    - aws configure set region "$STAGING_AWS_REGION"
    
    # Ki·ªÉm tra x√°c th·ª±c
    - aws sts get-caller-identity
    
    # Deploy l√™n Amplify
    - aws amplify start-deployment --app-id "$STAGING_AMPLIFY_APP_ID" --branch-name "$STAGING_BRANCH" --zip-file fileb://deploy.zip
    
    # Ki·ªÉm tra tr·∫°ng th√°i
    - sleep 5
    - aws amplify list-jobs --app-id "$STAGING_AMPLIFY_APP_ID" --branch-name "$STAGING_BRANCH" --max-results 1
  only:
    - staging
  dependencies:
    - build